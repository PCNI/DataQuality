package com.helicaltech.pcni.model;

import java.io.Serializable;
import java.util.List;

/**
 * This is persistent class for user which maps it's properties with h_user
 * table and persist them to a database, this class's object or instance in
 * stored in user table as per rule this class should have the default
 * constructor, as well as getter and setter method's for it's properties.
 * Annotation Entity mark this class as Entity Bean and annotation Table allows
 * you to specify the details of the table that will be used to persist the
 * entity in the database.
 *
 * @author Muqtar Ahmed
 * @version 1.1
 * @since 1.0
 */

public class User implements Serializable {

	/**
	 * this is static and final filed of serial version id automatically
	 * generated by eclipse
	 */

	private static final long serialVersionUID = 1L;

	/**
	 * each entity bean have the primary key and annotate with Id generated
	 * values generate the automatically determined the most appropriate primary
	 * key with strategy
	 */

	private int id;

	/**
	 * details of the column user name to which field's or properties is mapped
	 */

	private String username;

	/**
	 * details of the column password to which field's or properties is mapped
	 */

	private String password;

	/**
	 * details of the column email address to which field's or properties is
	 * mapped
	 */

	private String emailAddress;

	/**
	 * details of the column organization id to which field's or properties is
	 * mapped
	 */

	private Integer org_id;

	/**
	 * details of the column enabled to which field's or properties is mapped
	 * for checking whether user is enabled or disabled
	 */

	private boolean enabled;

	/**
	 * ManyToMany mapping between user table and role table, and association are
	 * mapped in intermediate user_role table when role is assigned to user.
	 * user, role mapping entry will be stored in user_role table list of role
	 * objects
	 */

	private List<Role> roles;

	/**
	 * OneToOne mapping between user and organization table and fetching
	 * strategy is eager when user is loaded it's organization's also get loaded
	 * mapping user and organization table on organization id organization
	 * object
	 */

	private String organization = "";

	/**
	 * default constructor
	 */
	public User() {

	}

	/**
	 * over loaded constructor with 5 arguments
	 *
	 * @param id
	 *            user Id
	 * @param username
	 *            user name
	 * @param password
	 *            password
	 * @param roles
	 *            user roles
	 * @param enabled
	 *            whether user is enabled or disabled
	 */

	public User(int id, String username, String password, List<Role> roles, boolean enabled) {
		super();
		this.id = id;
		this.username = username;
		this.password = password;
		this.roles = roles;
		this.enabled = enabled;
	}

	/**
	 * getter method for user id which is primary key for user table
	 *
	 * @return generated user id
	 */

	public int getId() {
		return id;
	}

	/**
	 * setter method for user id which is primary key for user table
	 *
	 * @param generated
	 *            user id
	 */

	public void setId(int id) {
		this.id = id;
	}

	/**
	 * getter method for user name
	 *
	 * @return user name
	 */

	public String getUsername() {
		return username;
	}

	/**
	 * setter method for user name
	 *
	 * @param username
	 */

	public void setUsername(String username) {
		this.username = username;
	}

	/**
	 * getter method for password
	 *
	 * @return password
	 */

	public String getPassword() {
		return password;
	}

	/**
	 * setter method for password
	 *
	 * @param password
	 */

	public void setPassword(String password) {
		this.password = password;
	}

	/**
	 * getter method for list of role objects
	 *
	 * @return list of role objects
	 */

	public List<Role> getRoles() {
		return roles;
	}

	/**
	 * setter method for list of role objects
	 *
	 * @param list
	 *            of roles
	 */

	public void setRoles(List<Role> roles) {
		this.roles = roles;
	}

	/**
	 * check boolean whether true or false
	 *
	 * @return boolean
	 */

	public boolean isEnabled() {
		return enabled;
	}

	/**
	 * set boolean whether true or false
	 *
	 * @param enabled
	 *            boolean value
	 */

	public void setEnabled(boolean enabled) {
		this.enabled = enabled;
	}


	/**
	 * getter method for organization objects
	 *
	 * @return organization objects
	 */

	public String getOrganization() {
		return organization;
	}

	/**
	 * getter method for email address
	 *
	 * @return email address
	 */

	public String getEmailAddress() {
		return emailAddress;
	}

	/**
	 * setter method for email address
	 *
	 * @param emailAddress
	 *            email address
	 */

	public void setEmailAddress(String emailAddress) {
		this.emailAddress = emailAddress;
	}

	/**
	 * getter method for organization id
	 *
	 * @return organization id
	 */

	public Integer getOrg_id() {
		return org_id;
	}

	/**
	 * setter method for organization id
	 *
	 * @param org_id
	 *            organization id
	 */

	public void setOrg_id(Integer org_id) {
		this.org_id = org_id;
	}
}
